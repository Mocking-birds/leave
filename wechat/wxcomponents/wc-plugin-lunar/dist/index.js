"use strict";var r=require("@lspriv/wx-calendar/dist/lib");const t=[0,4,173,8,90,1,213,84,180,9,100,5,89,69,149,10,166,4,85,36,173,8,90,98,218,4,180,5,180,85,82,13,148,10,74,42,86,2,109,113,109,1,218,2,210,82,169,5,73,13,42,69,43,9,86,1,181,32,109,1,89,105,212,10,168,5,169,86,165,4,43,9,158,56,182,8,236,116,108,5,212,10,228,106,82,5,149,10,90,66,91,4,182,4,180,34,106,5,82,117,201,10,82,5,53,85,77,10,90,2,93,49,181,2,106,138,104,5,169,10,138,106,42,5,45,9,170,72,90,1,181,9,176,57,100,5,37,117,149,10,150,4,77,84,173,4,218,4,212,68,180,5,84,133,82,13,146,10,86,106,86,2,109,2,106,65,218,2,178,161,169,5,73,13,10,109,42,9,86,1,173,80,109,1,217,2,209,58,168,5,41,133,165,12,42,9,150,84,182,8,108,9,100,69,212,10,164,5,81,37,149,10,42,114,91,4,182,4,172,82,106,5,210,10,162,74,74,5,85,148,45,10,90,2,117,97,181,2,106,3,97,69,169,10,74,5,37,37,45,9,154,104,218,8,180,9,168,89,84,3,165,10,145,58,150,4,173,176,173,4,218,4,244,98,180,5,84,11,68,93,82,10,149,4,85,34,109,2,90,113,218,2,170,5,178,85,73,11,74,10,45,57,54,1,109,128,109,1,217,2,233,106,168,5,41,11,154,76,170,8,182,8,180,56,108,9,84,117,212,10,164,5,69,85,149,10,154,4,85,68,181,4,106,130,106,5,210,10,146,106,74,5,85,10,42,74,90,2,181,2,178,49,105,3,49,115,169,10,74,5,45,85,45,9,90,1,213,72,180,9,104,137,84,11,164,10,165,106,149,4,173,8,106,68,218,4,116,5,176,37,84,3],n=[6,14,19,25,33,36,38,41,44,52,55,79,117,136,147,150,155,158,185,193],e=[[7,6,6,6,6,6,6,6,6,5,6,6,6,5,5,6,6,5,5,5,5,5,5,5,5,4,5,5],[5,4,5,5,5,4,4,5,5,4,4,4,4,4,4,4,4,3,4,4,4,3,3,4,4,3,3,3],[6,6,6,7,6,6,6,6,5,6,6,6,5,5,6,6,5,5,5,6,5,5,5,5,4,5,5,5,5],[5,5,6,6,5,5,5,6,5,5,5,5,4,5,5,5,4,4,5,5,4,4,4,5,4,4,4,4,5],[6,6,6,7,6,6,6,6,5,6,6,6,5,5,6,6,5,5,5,6,5,5,5,5,4,5,5,5,5],[6,6,7,7,6,6,6,7,6,6,6,6,5,6,6,6,5,5,6,6,5,5,5,6,5,5,5,5,4,5,5,5,5],[7,8,8,8,7,7,8,8,7,7,7,8,7,7,7,7,6,7,7,7,6,6,7,7,6,6,6,7,7],[8,8,8,9,8,8,8,8,7,8,8,8,7,7,8,8,7,7,7,8,7,7,7,7,6,7,7,7,6,6,7,7,7],[8,8,8,9,8,8,8,8,7,8,8,8,7,7,8,8,7,7,7,8,7,7,7,7,6,7,7,7,7],[9,9,9,9,8,9,9,9,8,8,9,9,8,8,8,9,8,8,8,8,7,8,8,8,7,7,8,8,8],[8,8,8,8,7,8,8,8,7,7,8,8,7,7,7,8,7,7,7,7,6,7,7,7,6,6,7,7,7],[7,8,8,8,7,7,8,8,7,7,7,8,7,7,7,7,6,7,7,7,6,6,7,7,6,6,6,7,7]],a=[[13,49,85,117,149,185,201,250,250],[13,45,81,117,149,185,201,250,250],[13,48,84,112,148,184,200,201,250],[13,45,76,108,140,172,200,201,250],[13,44,72,104,132,168,200,201,250],[5,33,68,96,124,152,188,200,201],[29,57,85,120,148,176,200,201,250],[13,48,76,104,132,168,196,200,201],[25,60,88,120,148,184,200,201,250],[16,44,76,108,144,172,200,201,250],[28,60,92,124,160,192,200,201,250],[17,53,85,124,156,188,200,201,250]],o=[[21,21,21,21,21,20,21,21,21,20,20,21,21,20,20,20,20,20,20,20,20,19,20,20,20,19,19,20],[20,19,19,20,20,19,19,19,19,19,19,19,19,18,19,19,19,18,18,19,19,18,18,18,18,18,18,18],[21,21,21,22,21,21,21,21,20,21,21,21,20,20,21,21,20,20,20,21,20,20,20,20,19,20,20,20,20],[20,21,21,21,20,20,21,21,20,20,20,21,20,20,20,20,19,20,20,20,19,19,20,20,19,19,19,20,20],[21,22,22,22,21,21,22,22,21,21,21,22,21,21,21,21,20,21,21,21,20,20,21,21,20,20,20,21,21],[22,22,22,22,21,22,22,22,21,21,22,22,21,21,21,22,21,21,21,21,20,21,21,21,20,20,21,21,21],[23,23,24,24,23,23,23,24,23,23,23,23,22,23,23,23,22,22,23,23,22,22,22,23,22,22,22,22,23],[23,24,24,24,23,23,24,24,23,23,23,24,23,23,23,23,22,23,23,23,22,22,23,23,22,22,22,23,23],[23,24,24,24,23,23,24,24,23,23,23,24,23,23,23,23,22,23,23,23,22,22,23,23,22,22,22,23,23],[24,24,24,24,23,24,24,24,23,23,24,24,23,23,23,24,23,23,23,23,22,23,23,23,22,22,23,23,23],[23,23,23,23,22,23,23,23,22,22,23,23,22,22,22,23,22,22,22,22,21,22,22,22,21,21,22,22,22],[22,22,23,23,22,22,22,23,22,22,22,22,21,22,22,22,21,21,22,22,21,21,21,22,21,21,21,21,22]],l=[[13,45,81,113,149,185,201],[21,57,93,125,161,193,201],[21,56,88,120,152,188,200,201],[21,49,81,116,144,176,200,201],[17,49,77,112,140,168,200,201],[28,60,88,116,148,180,200,201],[25,53,84,112,144,172,200,201],[29,57,89,120,148,180,200,201],[17,45,73,108,140,168,200,201],[28,60,92,124,160,192,200,201],[16,44,80,112,148,180,200,201],[17,53,88,120,156,188,200,201]],s="正二三四五六七八九十冬腊",c=["大寒","雨水","春分","谷雨","小满","夏至","大暑","处暑","秋分","霜降","小雪","冬至"],u=["小寒","立春","惊蛰","清明","立夏","芒种","小暑","立秋","白露","寒露","立冬","大雪"],i="〇一二三四五六七八九十",h=1901,y=1,f=1,m=0,d=4597,M=11,v=11,p=[{solar:u[2],year:2014,month:3,wrong:5,correct:6},{solar:c[2],year:2051,month:3,wrong:21,correct:20},{solar:u[1],year:2083,month:2,wrong:4,correct:3},{solar:c[2],year:2084,month:3,wrong:20,correct:19},{solar:u[5],year:2094,month:6,wrong:6,correct:5}],T=(r,t,n)=>{const e=`${r}`.padStart(4,"0"),a=`${t}`.padStart(2,"0"),o=`${n}`.padStart(2,"0");return new Date(`${e}-${a}-${o}T00:00:00Z`)};class ${static lunar(r,t,n){if(r<1901||r>2100)return null;const e=$.reviseSolarTerm(r,t,n);let a,o,l=h,i=y,m=f,p=d,D=M,Y=v;r>=2e3&&(l=h+99,i=1,m=1,p=d+99,D=11,Y=25);const g=T(l,i,m);Y+=(+T(r,t,n)-+g)/864e5;let w=$.cnMonthDays(p,D),A=$.nextCnMonth(p,D);for(;Y>w;)Math.abs(A)<Math.abs(D)&&p++,D=A,Y-=w,w=$.cnMonthDays(p,D),A=$.nextCnMonth(p,D);a=$.sectionalTerm(r,t),o=$.principleTerm(r,t);let _=$.lunarDay(Y),x="";return n===a?x=u[t-1]:n===o?x=c[t-1]:1===Y&&D>0?_=s[D-1]+"月":1===Y&&D<0&&(_=`闰${s[-D-1]}月`),!0===e?x="":e&&(x=e),{year:p,month:D,day:Y,lunarYear:$.lunarYear(p),lunarMonth:$.lunarMonth(D),lunarDay:_,solar:x}}static sectionalTerm(r,t){if(r<1901||r>2100)return 0;let n=0;const o=r-h+1;for(;o>=a[t-1][n];)n++;return e[t-1][4*n+o%4]}static principleTerm(r,t){if(r<1901||r>2100)return 0;let n=0;const e=r-h+1;for(;e>=l[t-1][n];)n++;return o[t-1][4*n+e%4]}static reviseSolarTerm(r,t,n){const e=p.find((t=>t.year==r));if((null==e?void 0:e.month)===t){if(e.wrong===n)return!0;if(e.correct===n)return e.solar}return!1}static lunarYear(r){return r?"甲乙丙丁戊己庚辛壬癸"[(r-1)%10]+"子丑寅卯辰巳午未申酉戌亥"[(r-1)%12]+"鼠牛虎兔龙蛇马羊猴鸡狗猪"[(r-1)%12]+"年":""}static lunarMonth(r){return null==r?"":r>0?`${s[r-1]}月`:`闰${s[-r-1]}月`}static lunarDay(r){return r?r>0&&r<=10?`初${i[r]}`:r<20?`十${i[r%10]}`:20==r?"二十":r<30?`廿${i[r%10]}`:30===r?"三十":"":""}static nextCnMonth(r,n){let e=Math.abs(n)+1;if(n>0){let a=t[2*(r-d+m)+1];a=a>>4&15,a==n&&(e=-n)}return 13==e&&(e=1),e}static cnMonthDays(r,e){const a=r-d+m;let o=0,l=0,s=30;if(1<=e&&e<=8)o=t[2*a],l=e-1,1==(o>>l&1)&&(s=29);else if(9<=e&&e<=12)o=t[2*a+1],l=e-9,1==(o>>l&1)&&(s=29);else if(o=t[2*a+1],o=o>>4&15,o!=Math.abs(e))s=0;else{s=29;for(let r=0;r<n.length;r++)if(n[r]==a){s=30;break}}return s}}class D{getLunar(r){return $.lunar(r.year,r.month,r.day)}PLUGIN_TRACK_DATE(r){const t=$.lunar(r.year,r.month,r.day);return{festival:{text:(null==t?void 0:t.solar)||(null==t?void 0:t.lunarDay)||"",style:{color:(null==t?void 0:t.solar)?"var(--wc-solar-color)":""}}}}PLUGIN_TRACK_YEAR(t){let n="";const e=new Map;for(let a=0;a<12;a++){const o=1===a&&r.isLeapYear(t.year)?r.GREGORIAN_MONTH_DAYS[a]+1:r.GREGORIAN_MONTH_DAYS[a],l=a+1;for(let a=0;a<o;a++){const o=a+1,s=$.lunar(t.year,l,o);if(10===l&&1===o&&(n=(null==s?void 0:s.lunarYear)||""),1===(null==s?void 0:s.day)){const t=r.getAnnualMarkKey({month:l,day:o}),n={};n.sub=1===(null==s?void 0:s.month)?"#F56C6C":"#409EFF",e.set(t,n)}}}return{subinfo:[{text:n,color:"#F56C6C"},{text:"农历初一",color:"#409EFF"}],marks:e}}}D.KEY="lunar";const Y=D.KEY;exports.LUNAR_PLUGIN_KEY=Y,exports.LunarPlugin=D;
